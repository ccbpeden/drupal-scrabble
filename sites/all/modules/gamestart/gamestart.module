<?php
    function gamestart_menu() {
        $items['start_game'] = array(
            'title' => 'Scrabble Game Start',
            'page callback' => 'initialize',
            'access callback' => TRUE,
            'type' => MENU_NORMAL_ITEM,
        );
        return $items;
    }

    function initialize() {
        $query_board = db_select('node', 'n')
            ->Fields('N', array('nid', 'title'))
            ->condition('type', 'board');
        $result = $query_board->execute();
        foreach($result as $record) {
            $node = node_load($record->nid);
            $node->field_played_letter[$node->language][0]['value'] = '';
            $node->field_current_image = $node->field_default_image;
            $node->revision = 1;
            $node->log = 'This node was programmatically updated on ' . date('c');
            node_save($node);
        }

        $query_play_tiles = db_select('node', 'n')
            ->Fields('N', array('nid', 'title'))
            ->condition('type', 'board_tile');
        $result = $query_play_tiles->execute();
        foreach($result as $play_tile) {
            $node = node_load($play_tile->nid);
            $node->field_belongs_to[$node->language][0]['value'] = '';
            $node->field_x_coordinate[$node->language][0]['value'] = '';
            $node->field_y_coordinate[$node->language][0]['value'] = '';
        }

        $query_words = db_select('node', 'n')
        ->Fields('N', array('nid', 'title'))
        ->condition('type', 'played_words');
        $result = $query_words->execute();
        foreach($result as $word) {
            $node = node_load($word->nid);
            node_delete($node->nid);
        }

        $query_players = db_select('node', 'n')
        ->Fields('N', array('nid', 'title'))
        ->condition('type', 'player');
        $result = $query_players->execute();
        foreach($result as $player) {
            $node = node_load($player->nid);
            $node->field_score[$node->language][0]['value'] = 0;
            $node->field_tile1[$node->language][0]['value'] = '';
            $node->field_tile2[$node->language][0]['value'] = '';
            $node->field_tile3[$node->language][0]['value'] = '';
            $node->field_tile4[$node->language][0]['value'] = '';
            $node->field_tile5[$node->language][0]['value'] = '';
            $node->field_tile6[$node->language][0]['value'] = '';
            $node->field_tile7[$node->language][0]['value'] = '';
            $node->revision = 1;
            $node->log = 'This node was programmatically updated on ' . date('c');
            node_save($node);
        }

        $query_beginning_player_tiles = db_select('node', 'n')
        ->Fields('N', array('nid'))
        ->condition('type', 'board_tile');
        $inplaytiles = [];
        $inplaynumbers = get_randoms(14);
        $all_letters = [];
        $result = $query_beginning_player_tiles->execute();

        foreach($result as $entry) {
            $node = node_load($entry->nid);
            $tile_possessor = $node->field_belongs_to[$node->language][0]['value'];
            array_push($all_letters, $node);
        }

        for($q = 0; $q < count($inplaynumbers); $q++){
            $current_random = $inplaynumbers[$q];
            array_push($inplaytiles, $all_letters[$current_random]);
        }

    return var_dump($inplaytiles);
    }

function get_randoms($amount) {
    $inplaynumbers = [];
    for($i = 1; $i <=99; $i++){
        if (count($inplaynumbers) < $amount) {
            $random = rand(0 , 99);
            if (!in_array($random, $inplaynumbers)) {
                array_push($inplaynumbers, $random);
            }
        } else {
            return $inplaynumbers;
        }
    }
}
