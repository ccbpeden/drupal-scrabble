<script>
function place_confirm() {
    var play = <?php echo json_encode($_SESSION['tile_to_play']->title); ?>;
    var board = <?php echo json_encode($_SESSION['location_to_play']->title); ?>;
    var confirm_string = "Do you want to place " + play + " at location "+ board +"?";
    var place = confirm(confirm_string);
    document.cookie = "placeresult=" + place+";";
    console.log(getCookie("placeresult"));
    return place;
}

function place_taken() {
    var taken = alert('This spot is already taken, please choose another!');
    return taken;
}

function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}
</script>

<?php
    $current_player = 'Player 1';

    function gamestart_menu() {
        $items['start_game'] = array(
            'title' => 'Scrabble Game Start',
            'page callback' => 'initialize',
            'access callback' => TRUE,
            'type' => MENU_NORMAL_ITEM,
        );
        $items['game_menu'] = array(
            'title' => 'Scrabble Play Menu',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('play_menu_form'),
            'access callback' => TRUE,
            'type' => MENU_CALLBACK,
        );
        $items['start_play_page'] = array(
            'title' => 'Current Turn Menu',
            'page callback' => 'start_turn',
            'access callback' => TRUE,
            'type' => MENU_CALLBACK,
        );
        $items['turn_options'] = array(
            'title' => $_SESSION['current_player']."'s Options",
            'page callback' => 'turn_options_cb',
            // 'page arguments' => array('play_menu_form'),
            'access callback' => TRUE,
            'type' => MENU_CALLBACK,
        );
        return $items;
    }

    function initialize() {
        $_SESSION['current_player'] = null;
        $_SESSION['game_in_play'] = false;
        $query_board = db_select('node', 'n')
            ->Fields('N', array('nid', 'title'))
            ->condition('type', 'board');
        $result = $query_board->execute();
        foreach($result as $record) {
            $node = node_load($record->nid);
            $node->field_played_letter[$node->language][0]['value'] = '';
            $node->field_current_image = $node->field_default_image;
            $node->revision = 1;
            $node->log = 'This node was programmatically updated on ' . date('c');
            node_save($node);
        }

        $query_play_tiles = db_select('node', 'n')
            ->Fields('N', array('nid', 'title'))
            ->condition('type', 'board_tile');
        $result = $query_play_tiles->execute();
        foreach($result as $play_tile) {
            $node = node_load($play_tile->nid);
            $node->field_belongs_to[$node->language][0]['value'] = 'none';
            $node->field_x_coordinate[$node->language][0]['value'] = '';
            $node->field_y_coordinate[$node->language][0]['value'] = null;
            node_save($node);
        }

        $query_words = db_select('node', 'n')
        ->Fields('N', array('nid', 'title'))
        ->condition('type', 'played_words');
        $result = $query_words->execute();
        foreach($result as $word) {
            $node = node_load($word->nid);
            node_delete($node->nid);
        }

        $query_players = db_select('node', 'n')
        ->Fields('N', array('nid', 'title'))
        ->condition('type', 'player');
        $result = $query_players->execute();
        foreach($result as $player) {
            $node = node_load($player->nid);
            $node->field_score[$node->language][0]['value'] = 0;
            $node->field_tile1[$node->language][0]['value'] = '';
            $node->field_tile2[$node->language][0]['value'] = '';
            $node->field_tile3[$node->language][0]['value'] = '';
            $node->field_tile4[$node->language][0]['value'] = '';
            $node->field_tile5[$node->language][0]['value'] = '';
            $node->field_tile6[$node->language][0]['value'] = '';
            $node->field_tile7[$node->language][0]['value'] = '';
            $node->revision = 1;
            $node->log = 'This node was programmatically updated on ' . date('c');
            node_save($node);
        }

        $query_beginning_player_tiles = db_select('node', 'n')
        ->Fields('N', array('nid'))
        ->condition('type', 'board_tile');
        $inplaytiles = [];
        $inplaynumbers = get_randoms(14);
        $all_letters = [];
        $result = $query_beginning_player_tiles->execute();
        $player1_tiles = [];
        $player2_tiles = [];

        foreach($result as $entry) {
            $node = node_load($entry->nid);
            $tile_possessor = $node->field_belongs_to[$node->language][0]['value'];
            array_push($all_letters, $node);
        }

        for($q = 0; $q < count($inplaynumbers); $q++){
            $current_random = $inplaynumbers[$q];
            array_push($inplaytiles, $all_letters[$current_random]);
        }

        for($s = 0; $s < count($inplaytiles); $s++){
            if ($s%2 === 0){
                array_push($player1_tiles, $inplaytiles[$s]);
            } else {
                array_push($player2_tiles, $inplaytiles[$s]);
            }
        }

        for($i = 0; $i < count($player1_tiles); $i++){
            $nid = $player1_tiles[$i]->nid;
            $node = node_load($nid);
            $node->field_belongs_to['und'][0]['value'] = 'Player 1';
            node_save($node);

        }
        $player1_nid = 2917;
        $player_node = node_load($player1_nid);
        $player_node->field_tile1[$node->language][0]['value'] = $player1_tiles[0]->nid;
        $player_node->field_tile2[$node->language][0]['value'] = $player1_tiles[1]->nid;
        $player_node->field_tile3[$node->language][0]['value'] = $player1_tiles[2]->nid;
        $player_node->field_tile4[$node->language][0]['value'] = $player1_tiles[3]->nid;
        $player_node->field_tile5[$node->language][0]['value'] = $player1_tiles[4]->nid;
        $player_node->field_tile6[$node->language][0]['value'] = $player1_tiles[5]->nid;
        $player_node->field_tile7[$node->language][0]['value'] = $player1_tiles[6]->nid;
        node_save($player_node);


        for($j = 0; $j < count($player2_tiles); $j++){
            $nid = $player2_tiles[$j]->nid;
            $node = node_load($nid);
            $node->field_belongs_to['und'][0]['value'] = 'Player 2';
            node_save($node);
        }

        $player2_nid = 2918;
        $player_node = node_load($player2_nid);
        $player_node->field_tile1[$node->language][0]['value'] = $player2_tiles[0]->nid;
        $player_node->field_tile2[$node->language][0]['value'] = $player2_tiles[1]->nid;
        $player_node->field_tile3[$node->language][0]['value'] = $player2_tiles[2]->nid;
        $player_node->field_tile4[$node->language][0]['value'] = $player2_tiles[3]->nid;
        $player_node->field_tile5[$node->language][0]['value'] = $player2_tiles[4]->nid;
        $player_node->field_tile6[$node->language][0]['value'] = $player2_tiles[5]->nid;
        $player_node->field_tile7[$node->language][0]['value'] = $player2_tiles[6]->nid;
        node_save($player_node);

        drupal_goto('game_menu');
    }

    function get_randoms($amount) {
        $inplaynumbers = [];
        for($i = 1; $i <=99; $i++){
            if (count($inplaynumbers) < $amount) {
                $random = rand(0 , 99);
                if (!in_array($random, $inplaynumbers)) {
                    array_push($inplaynumbers, $random);
                }
            } else {
                return $inplaynumbers;
            }
        }
    }

    function play_menu_form(){
        // $form[''] = array(
        //   '#title' => '',
        //   '#type' => '',
        //   '#description' => t(''),
        //
        // );

        if(isset($_SESSION['current_player'])){
            // $current_player = 'Player 2';
            $current_player = $_SESSION['current_player'];

        } else {
            $_SESSION['current_player'] = 'Player 1';
            $current_player = 'Player 1';
        }

        $form['submit'] = array(
          '#type' => 'submit',
          '#value' => $current_player. " start turn",
        );
        return $form;
    }

    function play_menu_form_submit($form, &$form_state) {
        $form_state['redirect'] = 'start_play_page';
    }

    function start_turn() {
        $player1 = 'playable_tiles_view';
        $player2 = 'player2_tiles_view';
        if ($_SESSION['current_player'] == 'Player 1') {
            $current_view = views_get_view($player1);
            $current_view->display['player1_tiles']->display_options['enabled'] = TRUE;
            views_save_view($current_view);
            $p2_view = views_get_view($player2);
            $p2_view->display['player2_tiles']->display_options['enabled'] = FALSE;
            views_save_view($p2_view);
            $_SESSION['game_in_play'] = true;
            $_SESSION['first_tile_played'] = false;
        } else if ($_SESSION['current_player'] == 'Player 2'){
            $current_view = views_get_view($player1);
            $current_view->display['player1_tiles']->display_options['enabled'] = FALSE;
            views_save_view($current_view);
            $p2_view = views_get_view($player2);
            $p2_view->display['player2_tiles']->display_options['enabled'] = TRUE;
            views_save_view($p2_view);
            $_SESSION['game_in_play'] = true;
            $_SESSION['first_tile_played'] = false;
        } else {
            $current_view = views_get_view($player1);
            $current_view->display['player1_tiles']->display_options['enabled'] = FALSE;
            views_save_view($current_view);
            $p2_view = views_get_view($player2);
            $p2_view->display['player2_tiles']->display_options['enabled'] = FALSE;
            views_save_view($p2_view);
        }

        drupal_goto('turn_options');
    }

    function turn_options_cb() {
        return "and you've gotten this far!";
    }

    function gamestart_node_view($node) {
        if($_SESSION['game_in_play'] && $node->type == 'board_tile'){
            $_SESSION['tile_to_play'] = $node;
            print($node->title);
        } else if($_SESSION['game_in_play'] && $node->type == 'board') {
            $_SESSION['location_to_play'] = $node;
            print($node->title);
        }
        if ($_SESSION['game_in_play'] && $_SESSION['tile_to_play'] && $_SESSION['location_to_play'] && $node->type == 'board'){
                $local_location = node_load($_SESSION['location_to_play']->nid);
                if ($local_location->field_played_letter['und'][0]['value']=='') {
                print_r($local_location->field_played_letter['und'][0]['value']);
                $local_tile = $_SESSION['tile_to_play'];
                $local_location->field_played_letter['und'][0]['value'] = $local_tile->title;
                node_save($local_location);
                echo '<script type="text/javascript">',
                'place_confirm();',
                '</script>';
                if($_COOKIE['placeresult']){
                    $board_node = node_load($node->nid);
                    $board_node->field_current_image = $local_tile->field_letter_image;
                    $board_node->field_played_letter = $local_tile->title;
                    node_save($board_node);
                    // print_r($board_node);
                    $play_node = node_load($local_tile->nid);
                    $play_node->field_x_coordinate = $board_node->field_board_x_coordinate;
                    $play_node->field_y_coordinate = $board_node->field_board_y_coordinate;
                    $play_node->field_belongs_to = 'played';
                    node_save($play_node);
                    // $player_node = node_load($_SESSION['current_player']->nid);
                    // for ($i = 1; $i <= 7; $i++) {
                    //     if ($player_node->field_tile.$i == $local_tile->nid) {
                    //         $player_node->field_tile.$i = '';
                    //     }
                    // }
                };

            } else {
                echo '<script type="text/javascript">',
                'place_taken();',
                '</script>';
            }
        }
    }
